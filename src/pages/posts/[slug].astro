---
import Container from '../../components/container'
import HeaderBlog from '../../components/header-blog'
import PostHeader from '../../components/post-header'
import PostBody from '../../components/post-body'
import Comments from '../../components/comments'
import { metaTagsFragment, responsiveImageFragment } from '../../lib/fragments'
import Layout from '../../components/layout'

const { slug } = Astro.params

const graphqlRequest = {
  query: `
      query PostBySlug($slug: String) {
        site: _site {
          favicon: faviconMetaTags {
            ...metaTagsFragment
          }
        }
        post(filter: {slug: {eq: $slug}}) {
          seo: _seoMetaTags {
            ...metaTagsFragment
          }
          title
          slug
          excerpt
          content {
            value
            blocks {
              __typename
              ...on ImageBlockRecord {
                id
                image {
                  responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {
                    ...responsiveImageFragment
                  }
                }
              }
              ...on VideoBlockRecord {
                id
                video {
                  alt
                  url
                  video {
                    thumbnailUrl
                  }
                }
              }
            }
          }
          date
          ogImage: coverImage{
            url(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 })
          }
          coverImage {
            responsiveImage {
              ...responsiveImageFragment
            }
          }
          coverVideo {
            url
            alt
            video {
              thumbnailUrl
            }
          }
        }

        morePosts: allPosts(orderBy: date_DESC, first: 2, filter: {slug: {neq: $slug}}) {
          title
          slug
          excerpt
          date
          coverImage {
            responsiveImage {
              ...responsiveImageFragment
            }
          }
          coverVideo {
            url
            alt
            video {
              thumbnailUrl
            }
          }
        }
      }

      ${responsiveImageFragment}
      ${metaTagsFragment}
    `,

  variables: {
    slug
  }
}

const response = await fetch('https://graphql.datocms.com/', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: `Bearer ${import.meta.env.DATOCMS_API_TOKEN}`
  },
  body: JSON.stringify(graphqlRequest)
})

const parsedResponse = await response.json()

const post = parsedResponse.data.post

const morePosts = parsedResponse.data.morePosts

export async function getStaticPaths() {
  const slugsResponse = await fetch('https://graphql.datocms.com/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Accept: 'application/json',
      Authorization: `Bearer ${import.meta.env.DATOCMS_API_TOKEN}`
    },
    body: JSON.stringify({
      query: `{allPosts {
        slug
      }}`
    })
  })
  const parsedSlugResponse = await slugsResponse.json()

  const pathsArray = []
  for (const slug of parsedSlugResponse.data.allPosts) {
    pathsArray.push({ params: slug })
  }
  return pathsArray
}
---

<Layout {...{currentSlug: `posts/${slug}`}}>
  <Container>
    <HeaderBlog />
    <article>
      <PostHeader {...post} />
      <PostBody {...post} />
      <Comments {...{title: post.title, url: Astro.url.href}} client:idle />
    </article>
  </Container>
</Layout>
